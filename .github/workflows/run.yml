name: win_lin_release

on:
  push:
    branches: [ "main","devel","nuitka" ]

permissions: read-all

jobs:
##########################################################################
  win-gen-version-build:
    runs-on: windows-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: python setup
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'
        check-latest: true

    - name: pip upgrade
      run: python -m pip install --upgrade pip

    - name: install requirements
      run: pip install -r requirements.txt

    #####################################
    - name: generate version number
      working-directory: ./scripts
      run: "version.gen.bat"
      shell: cmd

    - name: version upload
      uses: actions/upload-artifact@v4
      with:
        name: version
        path: ./src/version.txt
        if-no-files-found: error

    - name: convert icons to python source
      working-directory: ./scripts
      run: "icons.convert.bat"
      shell: cmd

    #####################################
    - name: run nuitka
      working-directory: ./scripts
      run: "nuitka.run.bat"
      shell: cmd

    - name: upload win distro
      uses: actions/upload-artifact@v4
      with:
        name: nuitka-win
        path: ./build-nuitka/dude.win.zip
        if-no-files-found: error

##########################################################################
  build-lin-release:
    permissions: write-all
    needs: [win-gen-version-build]
    runs-on: ubuntu-20.04

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: python setup
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'
        check-latest: true

    - name: pip upgrade
      run: python -m pip install --upgrade pip

    - name: install requirements
      run: pip install -r requirements.txt

    - name: strip python binaries
      run: find $pythonLocation -name *.so* -type f -exec strip {} \;

    - name: version download
      uses: actions/download-artifact@v4
      with:
        name: version
        path: ./src

    - name: convert icons to python source
      working-directory: ./scripts
      run: bash "icons.convert.sh"

    #####################################
    - name: run nuitka
      working-directory: ./scripts
      run: bash "nuitka.run.sh"

    - name: upload lin distro
      uses: actions/upload-artifact@v4
      with:
        name: nuitka-lin
        path: ./build-nuitka/dude.lin.zip
        if-no-files-found: error

    #####################################
    - name: version read
      id: version
      run: echo "version=$(cat ./src/version.txt)" >> $GITHUB_OUTPUT

    - name: rename linux distro
      run: mv ./build-nuitka/dude.lin.zip ./dude_nuitka.${{ steps.version.outputs.version }}.portable.linux.zip

    #####################################
    - name: download windows distro
      uses: actions/download-artifact@v4
      with:
        name: nuitka-win
        path: ./

    - name: rename windows distro
      run: mv ./dude.win.zip ./dude_nuitka.${{ steps.version.outputs.version }}.portable.windows.zip

    #####################################
    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Dude-Nuitka Release ${{ steps.version.outputs.version }}
        draft: false
        prerelease: true
        files: |
            dude_nuitka.${{ steps.version.outputs.version }}.portable.linux.zip
            dude_nuitka.${{ steps.version.outputs.version }}.portable.windows.zip

